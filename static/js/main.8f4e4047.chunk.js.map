{"version":3,"sources":["components/ScoreBar/index.js","components/PictureCard/index.js","components/Jumbotron/index.js","App.js","index.js"],"names":["ScoreBar","props","react_default","a","createElement","currentScore","highScore","PictureCard","Object","assign","alt","id","onClick","handleClick","Jumbotron","class","App","state","cardData","clicked","console","log","_this","indexOf","setState","concat","this","checkForHighScore","handleScoreReset","shuffle","array","i","length","j","Math","floor","random","_ref","alert","_this2","components_ScoreBar","components_Jumbotron","style","display","flexWrap","map","card","components_PictureCard","key","src","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"08BAQeA,MANf,SAAkBC,GACd,OACIC,EAAAC,EAAAC,cAAA,6BAAqBH,EAAMI,aAA3B,kBAAwDJ,EAAMK,YCIvDC,MANf,SAAqBN,GACb,OACIC,EAAAC,EAAAC,cAAA,MAAAI,OAAAC,OAAA,GAASR,EAAT,CAAgBS,IAAKT,EAAMU,GAAIC,QAAS,kBAAMX,EAAMY,YAAYZ,EAAMU,gBCKnEG,MAPf,WACI,OAAQZ,EAAAC,EAAAC,cAAA,OAAKW,MAAM,aACrBb,EAAAC,EAAAC,cAAA,MAAIW,MAAM,aAAV,uBACAb,EAAAC,EAAAC,cAAA,KAAGW,MAAM,QAAT,wCCoEaC,6MAjEXC,MAAQ,CACJZ,aAAc,EACdC,UAAW,EACXY,WACAC,QAAS,MAGbN,YAAc,SAACF,GACXS,QAAQC,IAAIV,IAC4B,IAApCW,EAAKL,MAAME,QAAQI,QAAQZ,GAC3BW,EAAKE,SACD,CAACnB,aAAciB,EAAKL,MAAMZ,aAAe,EACzCc,QAASG,EAAKL,MAAME,QAAQM,OAAOd,IACnC,WAAYe,KAAKC,sBAGrBL,EAAKM,mBAETN,EAAKO,QAAQX,MAGjBW,QAAU,SAACC,GACP,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADHM,EAEhB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFgCM,EAAA,GAE5BP,EAAMG,GAFsBI,EAAA,OAM/CT,iBAAmB,WACfU,MAAM,wBACNhB,EAAKE,SACD,CAACnB,aAAc,EAAGc,QAAS,QAInCQ,kBAAoB,WACZL,EAAKL,MAAMZ,aAAeiB,EAAKL,MAAMX,YACrCc,QAAQC,IAAI,kBACZC,EAAKE,SAAS,CAAElB,UAAWgB,EAAKL,MAAMZ,yFAIrC,IAAAkC,EAAAb,KACL,OACIxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoC,EAAD,CAAUnC,aAAcqB,KAAKT,MAAMZ,aAAcC,UAAWoB,KAAKT,MAAMX,YACvEJ,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAAA,OAAKW,MAAM,gCAAgC2B,MAAO,CAACC,QAAS,OAAQC,SAAU,SACzElB,KAAKT,MAAMC,SAAS2B,IAAK,SAAAC,GACtB,OACI5C,EAAAC,EAAAC,cAAC2C,EAAD,CACAC,IAAKF,EAAKnC,GACVA,GAAImC,EAAKnC,GACTsC,IAAKH,EAAKG,IACVpC,YAAa0B,EAAK1B,yBAvD5BqC,aCHlBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8f4e4047.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ScoreBar(props){\n    return (\n        <div>Current Score: {props.currentScore} | High Score: {props.highScore}</div>\n    )\n}\n\nexport default ScoreBar;\n","import React from \"react\";\n\nfunction PictureCard(props){\n        return (\n            <img {...props} alt={props.id} onClick={() => props.handleClick(props.id)}/>\n        )\n}\n\nexport default PictureCard;\n","import React from \"react\";\n\nfunction Jumbotron(){\n    return (<div class=\"jumbotron\">\n  <h1 class=\"display-4\">Animals Memory Game</h1>\n  <p class=\"lead\">Don't Click The Same Animal Twice!</p>\n</div>)\n}\n\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport ScoreBar from \"./components/ScoreBar\"\nimport PictureCard from \"./components/PictureCard\"\n// import GridDiv from \"./components/GridDiv\"\nimport cardData from \"./cardData.json\"\nimport Jumbotron from \"./components/Jumbotron\";\n\nclass App extends Component {\n    state = {\n        currentScore: 0,\n        highScore: 0,\n        cardData,\n        clicked: []\n    }\n\n    handleClick = (id) => {\n        console.log(id)\n        if (this.state.clicked.indexOf(id) === -1) {\n            this.setState(\n                {currentScore: this.state.currentScore + 1,\n                clicked: this.state.clicked.concat(id)}, \n                function() {this.checkForHighScore()}\n            )\n        } else {\n            this.handleScoreReset()\n        }\n        this.shuffle(cardData)\n    };\n\n    shuffle = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    handleScoreReset = () => {\n        alert(\"Whoops! Back to 0...\")\n        this.setState(\n            {currentScore: 0, clicked: [] }\n        )\n    };\n\n    checkForHighScore = () => {\n        if (this.state.currentScore > this.state.highScore) {\n            console.log(\"new high score\")\n            this.setState({ highScore: this.state.currentScore})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ScoreBar currentScore={this.state.currentScore} highScore={this.state.highScore}></ScoreBar>\n                <Jumbotron></Jumbotron>\n                <div class=\"d-flex justify-content-center\" style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                    {this.state.cardData.map( card => {\n                        return (\n                            <PictureCard \n                            key={card.id}\n                            id={card.id}\n                            src={card.src}\n                            handleClick={this.handleClick}/>\n                        )\n                    })}\n                </div>\n\n            </div>\n        )\n    }\n    \n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}